definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  model.AddUserRequest:
    properties:
      passportNumber:
        type: string
    type: object
  model.CalcTimeRequest:
    properties:
      id:
        type: string
    type: object
  model.DeleteUserRequest:
    properties:
      id:
        type: string
    type: object
  model.Task:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/model.User'
      userID:
        type: string
    type: object
  model.TaskTrack:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: string
      task:
        $ref: '#/definitions/model.Task'
      taskID:
        type: string
      time:
        $ref: '#/definitions/time.Duration'
      updatedAt:
        type: string
    type: object
  model.TaskTrackRequest:
    properties:
      task_id:
        type: string
    type: object
  model.UpdateUserRequest:
    properties:
      address:
        type: string
      id:
        type: string
      name:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
  model.User:
    properties:
      address:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: string
      name:
        type: string
      patronymic:
        type: string
      surname:
        type: string
      updatedAt:
        type: string
    type: object
  time.Duration:
    enum:
    - -9223372036854775808
    - 9223372036854775807
    - 1
    - 1000
    - 1000000
    - 1000000000
    - 60000000000
    - 3600000000000
    type: integer
    x-enum-varnames:
    - minDuration
    - maxDuration
    - Nanosecond
    - Microsecond
    - Millisecond
    - Second
    - Minute
    - Hour
info:
  contact: {}
  description: Api Endpoints for time tracker
  title: Time Tracker
paths:
  /api/calc-time:
    post:
      consumes:
      - application/json
      parameters:
      - description: user id
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/model.CalcTimeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: object,object
      summary: Calculate a time spent on task
      tags:
      - Track
  /api/end-track:
    post:
      consumes:
      - application/json
      parameters:
      - description: task id
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/model.TaskTrackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: Stop track a time for task
      tags:
      - Track
  /api/start-track:
    post:
      consumes:
      - application/json
      parameters:
      - description: task id
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/model.TaskTrackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TaskTrack'
      summary: Track a time for task
      tags:
      - Track
  /api/users:
    delete:
      consumes:
      - application/json
      parameters:
      - description: user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.DeleteUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: Delete a specific user
      tags:
      - Users
    get:
      parameters:
      - description: pagination limit
        in: query
        name: limit
        type: string
      - description: pagination page
        in: query
        name: page
        type: string
      - description: filter name
        in: query
        name: name
        type: string
      - description: filter surname
        in: query
        name: surname
        type: string
      - description: filter address
        in: query
        name: address
        type: string
      - description: filter patronymic
        in: query
        name: patronymic
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      summary: Get all users
      tags:
      - Users
    post:
      consumes:
      - application/json
      parameters:
      - description: user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.AddUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: Add a specific user
      tags:
      - Users
    put:
      consumes:
      - application/json
      parameters:
      - description: user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: Update a specific user
      tags:
      - Users
swagger: "2.0"
